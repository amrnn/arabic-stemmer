{"version":3,"sources":["src/Stemmer.js","index.js"],"names":["p4","p3","p2","p1","s3","s2","s1","pr4","re_short_vowels","re_hamza","re_initial_hamza","stop_words","patterns","Stemmer","token","trim","replace","includes","preNormalize","pre432","suf32","matches","getMatches","concat","map","m","postNormalize","reduce","res","current","push","word","length","pre4","startsWith","substr","pre3","pre2","suf3","endsWith","suf2","removeFirst","originalToken","len","pat","match","exec","slice","join","removeOne","finalMatches","forEach","suf1","pre1","sf1","sp1","c1","c2","c3","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,EAAE,GAAG,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CAAX,EAEA;;AACA,IAAMC,EAAE,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,CAAX,EAEA;;AACA,IAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqF,IAArF,EAA2F,IAA3F,EAAiG,IAAjG,EAAuG,IAAvG,EAA6G,IAA7G,EAAmH,IAAnH,EAAyH,IAAzH,EAA+H,IAA/H,CAAX,EAEA;;AACA,IAAMC,EAAE,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,CAAX,EAEA;;AACA,IAAMC,EAAE,GAAG,CAAC,oBAAD,EAAuB,oBAAvB,EACP,oBADO,EACe,oBADf,EAEP,oBAFO,CAAX,EAIA;;AACA,IAAMC,EAAE,GAAG,CAAC,cAAD,EAAiB,cAAjB,EAAiC,cAAjC,EACP,cADO,EACS,cADT,EACyB,cADzB,EAEP,cAFO,EAES,cAFT,EAEyB,cAFzB,EAGP,cAHO,EAGS,cAHT,EAGyB,cAHzB,EAIP,cAJO,EAIS,cAJT,EAIyB,cAJzB,EAKP,cALO,CAAX,EAOA;;AACA,IAAMC,EAAE,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EACP,QADO,EACG,QADH,EACa,GADb,CAAX;AAGA,IAAMC,GAAG,GAAG;AACR,KAAG,CAAC,QAAD,CADK;AACO,KAAG,CAAC,QAAD,CADV;AAER,KAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CAFK;AAE2B,KAAG,CAAC,QAAD;AAF9B,CAAZ;AAMA,IAAMC,eAAe,GAAG,kBAAxB;AACA,IAAMC,QAAQ,GAAG,mCAAjB;AACA,IAAMC,gBAAgB,GAAG,uBAAzB;AAEA,IAAMC,UAAU,GAAG,CAAC,0BAAD,EACf,0BADe,EAEf,0BAFe,EAGf,0BAHe,EAIf,0BAJe,EAKf,0BALe,EAMf,gCANe,EAOf,0BAPe,EAQf,0BARe,EASf,gCATe,EAUf,0BAVe,EAWf,gCAXe,EAYf,0BAZe,EAaf,gCAbe,EAcf,sCAde,EAef,0BAfe,EAgBf,0BAhBe,EAiBf,0BAjBe,EAkBf,0BAlBe,EAmBf,0BAnBe,EAoBf,0BApBe,EAqBf,gCArBe,EAsBf,gCAtBe,EAuBf,sCAvBe,EAwBf,sCAxBe,EAyBf,0BAzBe,EA0Bf,0BA1Be,EA2Bf,0BA3Be,EA4Bf,0BA5Be,EA6Bf,0BA7Be,EA8Bf,0BA9Be,EA+Bf,gCA/Be,EAgCf,gCAhCe,EAiCf,sCAjCe,EAkCf,sCAlCe,EAmCf,4CAnCe,EAoCf,sCApCe,EAqCf,gCArCe,EAsCf,gCAtCe,EAuCf,0BAvCe,EAwCf,gCAxCe,EAyCf,0BAzCe,EA0Cf,0BA1Ce,EA2Cf,0BA3Ce,EA4Cf,gCA5Ce,EA6Cf,0BA7Ce,EA8Cf,0BA9Ce,EA+Cf,0BA/Ce,EAgDf,0BAhDe,CAAnB;AAmDA,IAAMC,QAAQ,GAAG;AACb,KAAG,EADU;AAEb,KAAG,CACC,mCADD,CAFU;AAKb,KAAG,CACC,6BADD,EACqC;AACpC,+BAFD,EAEqC;AACpC,+BAHD,EAGqC;AACpC,+BAJD,EAIqC;AACpC,+BALD,EAKqC;AACpC,+BAND,EAMqC;AACpC,+BAPD,EAOqC;AACpC,oCARD,EAQqC;AACpC,+BATD,EASqC;AACpC,+BAVD,EAUqC;AACpC,+BAXD,EAWqC;;AAEpC;AACA,4BAdD,EAcqC;AACpC,4BAfD,EAeqC;AACpC,4BAhBD,CALU;AAuBb,KAAG,CACC,uBADD,EACqC;AACpC,yBAFD,EAEqC;AACpC,yBAHD,EAGqC;AACpC,yBAJD,EAIqC;AACpC,yBALD,EAKqC;AACpC,yBAND,EAMqC;AACpC,yBAPD,EAOqC;AACpC,yBARD,EAQqC;AACpC,yBATD,EASqC;AACpC,yBAVD,EAUqC;AACpC,yBAXD,EAWqC;AACpC,yBAZD,EAYqC;AACpC,yBAbD,EAaqC;AACpC,yBAdD,EAcqC;AACpC,yBAfD,EAeqC;AACpC,yBAhBD,EAgBqC;AACpC,yBAjBD,EAiBqC;AACpC,yBAlBD,EAkBqC;AACpC,yBAnBD,EAmBqC;AACpC,yBApBD,EAoBqC;AACpC,yBArBD,EAqBqC;AACpC,yBAtBD,EAsBqC;AACpC,yBAvBD,EAuBqC;AACpC,yBAxBD,EAwBqC;AACpC,yBAzBD,EAyBqC;AACpC,yBA1BD,EA0BqC;AAEpC,yBA5BD,EA4BqC;;AAEpC;AACA,sBA/BD,EA+BqC;AACpC,sBAhCD,EAgCqC;AACpC,sBAjCD,EAiCqC;AACpC,sBAlCD,EAkCqC;AACpC,sBAnCD,EAmCqC;AACpC,sBApCD,CAvBU;AA6Db,KAAG,CACC,iBADD,EACqC;AACpC,mBAFD,EAEqC;AACpC,mBAHD,EAGqC;AACpC,mBAJD,EAIqC;AACpC,mBALD,EAKqC;AACpC,mBAND,EAMqC;AAEpC,mBARD,EAQqC;AACpC,mBATD,EASqC;AACpC,mBAVD,EAUqC;AACpC,mBAXD,EAWqC;AACpC,mBAZD,CA7DU;AA2Eb,KAAG,CACC,WADD;AA3EU,CAAjB;;IAgFqBC;;;;;;;;;yBACZC,OAAO;AAAA;;AACRA,MAAAA,KAAK,GAAGA,KAAK,CAACC,IAAN,EAAR;AACAD,MAAAA,KAAK,GAAGA,KAAK,CAACE,OAAN,CAAcR,eAAd,EAA+B,EAA/B,CAAR;;AAEA,UAAIG,UAAU,CAACM,QAAX,CAAoBH,KAApB,CAAJ,EAAgC;AAC5B,eAAOA,KAAP;AACH;;AAEDA,MAAAA,KAAK,GAAG,KAAKI,YAAL,CAAkBJ,KAAlB,CAAR;AAEAA,MAAAA,KAAK,GAAG,KAAKK,MAAL,CAAYL,KAAZ,CAAR;AACAA,MAAAA,KAAK,GAAG,KAAKM,KAAL,CAAWN,KAAX,CAAR;AAEA,UAAIO,OAAO,GAAG,KAAKC,UAAL,CAAgBR,KAAhB,EAAuB,QAAvB,CAAd;AACAO,MAAAA,OAAO,GAAGA,OAAO,CAACE,MAAR,CAAe,KAAKD,UAAL,CAAgBR,KAAhB,EAAuB,QAAvB,CAAf,CAAV;AACAO,MAAAA,OAAO,GAAGA,OAAO,CAACG,GAAR,CAAY,UAAAC,CAAC;AAAA,eAAI,KAAI,CAACC,aAAL,CAAmBD,CAAnB,CAAJ;AAAA,OAAb,CAAV;AACAJ,MAAAA,OAAO,GAAGA,OAAO,CAACM,MAAR,CAAe,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACvC,SAACD,GAAG,CAACX,QAAJ,CAAaY,OAAb,CAAD,IAA0BD,GAAG,CAACE,IAAJ,CAASD,OAAT,CAA1B;AACA,eAAOD,GAAP;AACH,OAHS,EAGP,EAHO,CAAV;AAIA,aAAOP,OAAP;AACH;;;2BAEMU,MAAM;AACT,UAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AAClB,8BAAiBhC,EAAjB,eAAqB;AAAhB,cAAIiC,IAAI,GAAIjC,EAAJ,IAAR;AACD,cAAI+B,IAAI,CAACG,UAAL,CAAgBD,IAAhB,CAAJ,EACI,OAAOF,IAAI,CAACI,MAAL,CAAY,CAAZ,CAAP;AACP;AACJ;;AACD,UAAIJ,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AAClB,gCAAiB/B,EAAjB,gBAAqB;AAAhB,cAAImC,IAAI,GAAInC,EAAJ,KAAR;AACD,cAAI8B,IAAI,CAACG,UAAL,CAAgBE,IAAhB,CAAJ,EACI,OAAOL,IAAI,CAACI,MAAL,CAAY,CAAZ,CAAP;AACP;AACJ;;AACD,UAAIJ,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AAClB,gCAAiB9B,EAAjB,gBAAqB;AAAhB,cAAImC,IAAI,GAAInC,EAAJ,KAAR;AACD,cAAI6B,IAAI,CAACG,UAAL,CAAgBG,IAAhB,CAAJ,EACI,OAAON,IAAI,CAACI,MAAL,CAAY,CAAZ,CAAP;AACP;AACJ;;AACD,aAAOJ,IAAP;AACH;;;0BAEKA,MAAM;AACR,UAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AAClB,gCAAiB5B,EAAjB,gBAAqB;AAAhB,cAAIkC,IAAI,GAAIlC,EAAJ,KAAR;AACD,cAAI2B,IAAI,CAACQ,QAAL,CAAcD,IAAd,CAAJ,EACI,OAAOP,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeJ,IAAI,CAACC,MAAL,GAAc,CAA7B,CAAP;AACP;AACJ;;AACD,UAAID,IAAI,CAACC,MAAL,IAAe,CAAnB,EAAsB;AAClB,gCAAiB3B,EAAjB,gBAAqB;AAAhB,cAAImC,IAAI,GAAInC,EAAJ,KAAR;AACD,cAAI0B,IAAI,CAACQ,QAAL,CAAcC,IAAd,CAAJ,EACI,OAAOT,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeJ,IAAI,CAACC,MAAL,GAAc,CAA7B,CAAP;AACP;AACJ;;AAED,aAAOD,IAAP;AACH;;;+BAEUjB,OAA6B;AAAA;;AAAA,UAAtB2B,WAAsB,uEAAV,QAAU;AACpC,UAAIC,aAAa,GAAG5B,KAApB;AACA,UAAI6B,GAAG,GAAG7B,KAAK,CAACkB,MAAhB;AACA,UAAMX,OAAO,GAAG,EAAhB;;AACA,aAAOsB,GAAG,IAAI,CAAd,EAAiB;AAAA;AAAA;AAAA;;AAAA;AACb,+BAAgB/B,QAAQ,CAAC+B,GAAD,CAAxB,8HAA+B;AAAA,gBAAtBC,GAAsB;AAC3B,gBAAIC,KAAK,SAAT;;AACA,gBAAIA,KAAK,GAAGD,GAAG,CAACE,IAAJ,CAAShC,KAAT,CAAZ,EAA6B;AACzBO,cAAAA,OAAO,CAACS,IAAR,CAAae,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAeC,IAAf,CAAoB,EAApB,CAAb;AACH;AACJ;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOblC,QAAAA,KAAK,GAAG,KAAKmC,SAAL,CAAenC,KAAf,EAAsB2B,WAAtB,CAAR;;AAEA,YAAI3B,KAAK,CAACkB,MAAN,IAAgBW,GAApB,EAAyB;AACrB;AACH;;AACDA,QAAAA,GAAG,IAAI,CAAP;AACH;;AACD,UAAItB,OAAO,CAACW,MAAR,IAAkB,CAAtB,EAAyB;AACrBX,QAAAA,OAAO,CAACS,IAAR,CAAaY,aAAb;AACH;;AACD,UAAIQ,YAAY,GAAG,EAAnB;AACA7B,MAAAA,OAAO,CAAC8B,OAAR,CAAgB,UAACN,KAAD,EAAW;AACvB,YAAIA,KAAK,CAACb,MAAN,GAAe,CAAf,GAAmBa,KAAK,KAAKH,aAAjC,EAAgD;AAC5CQ,UAAAA,YAAY,GAAGA,YAAY,CAAC3B,MAAb,CAAoB,MAAI,CAACD,UAAL,CAAgBuB,KAAhB,EAAuBJ,WAAvB,CAApB,CAAf;AACH,SAFD,MAEO;AACHS,UAAAA,YAAY,CAACpB,IAAb,CAAkBe,KAAlB;AACH;AACJ,OAND;AAOA,aAAOK,YAAP;AACH;;;8BAESpC,OAA6B;AAAA,UAAtB2B,WAAsB,uEAAV,QAAU;AACnC,UAAME,GAAG,GAAG7B,KAAK,CAACkB,MAAlB;;AACA,UAAIS,WAAW,IAAI,QAAnB,EAA6B;AACzB3B,QAAAA,KAAK,GAAG,KAAKsC,IAAL,CAAUtC,KAAV,CAAR;;AACA,YAAIA,KAAK,CAACkB,MAAN,IAAgBW,GAApB,EAAyB;AACrB7B,UAAAA,KAAK,GAAG,KAAKuC,IAAL,CAAUvC,KAAV,CAAR;AACH;AACJ,OALD,MAKO;AACHA,QAAAA,KAAK,GAAG,KAAKuC,IAAL,CAAUvC,KAAV,CAAR;;AACA,YAAIA,KAAK,CAACkB,MAAN,IAAgBW,GAApB,EAAyB;AACrB7B,UAAAA,KAAK,GAAG,KAAKsC,IAAL,CAAUtC,KAAV,CAAR;AACH;AACJ;;AACD,aAAOA,KAAP;AACH;;;yBAEIiB,MAAM;AACP;AACA,8BAAgBzB,EAAhB,gBAAoB;AAAf,YAAIgD,GAAG,GAAIhD,EAAJ,KAAP;AACD,YAAIyB,IAAI,CAACQ,QAAL,CAAce,GAAd,CAAJ,EACI,OAAOvB,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeJ,IAAI,CAACC,MAAL,GAAc,CAA7B,CAAP;AACP;;AAED,aAAOD,IAAP;AACH;;;yBAEIA,MAAM;AACP;AACA,8BAAgB5B,EAAhB,gBAAoB;AAAf,YAAIoD,GAAG,GAAIpD,EAAJ,KAAP;AACD,YAAI4B,IAAI,CAACG,UAAL,CAAgBqB,GAAhB,CAAJ,EACI,OAAOxB,IAAI,CAACI,MAAL,CAAY,CAAZ,CAAP;AACP;;AAED,aAAOJ,IAAP;AACH;;;iCAEYjB,OAAO;AAChBA,MAAAA,KAAK,GAAGA,KAAK,CAACE,OAAN,CAAcP,QAAd,EAAwB,GAAxB,CAAR;AACAK,MAAAA,KAAK,GAAGA,KAAK,CAACE,OAAN,CAAc,GAAd,EAAmB,GAAnB,CAAR;AACAF,MAAAA,KAAK,GAAGA,KAAK,CAACE,OAAN,CAAc,IAAd,EAAoB,GAApB,CAAR;AACA,aAAOF,KAAP;AACH;;;kCAEaA,OAAO;AACjB,UAAIA,KAAK,CAACkB,MAAN,IAAgB,CAApB,EAAuB;AACnB,YAAMwB,EAAE,GAAG1C,KAAK,CAAC,CAAD,CAAL,CAASE,OAAT,CAAiB,MAAjB,EAAyB,GAAzB,CAAX;AACA,YAAMyC,EAAE,GAAG3C,KAAK,CAAC,CAAD,CAAL,CAASE,OAAT,CAAiB,MAAjB,EAAyB,GAAzB,CAAX;AACA,YAAM0C,EAAE,GAAG5C,KAAK,CAAC,CAAD,CAAL,CAASE,OAAT,CAAiB,OAAjB,EAA0B,GAA1B,CAAX;AACAF,QAAAA,KAAK,GAAG0C,EAAE,GAAGC,EAAL,GAAUC,EAAlB;AACH;;AACD,UAAI5C,KAAK,CAACkB,MAAN,IAAgB,CAApB,EAAuB;AACnBlB,QAAAA,KAAK,GAAGA,KAAK,GAAG,GAAhB;AACH;;AACD,aAAOA,KAAP;AACH;;;;;;;;;;AC9TL;;;;AAEA6C,MAAM,CAACC,OAAP,GAAiB/C,gBAAjB","file":"index.map","sourceRoot":"..","sourcesContent":["const p4 = ['وكال', 'وبال', 'فبال'];\n\n// length three prefixes\nconst p3 = ['وال', 'فال', 'كال', 'بال', 'ولل', 'فلل'];\n\n// length two prefixes\nconst p2 = ['ال', 'لل', 'لي', 'لت', 'لن', 'لا', 'فل', 'فس', 'في', 'فت', 'فن', 'فا', 'سي', 'ست', 'سن', 'سا', 'ول', 'وس', 'وي', 'وت', 'ون', 'وا',];\n\n// length one prefixes\nconst p1 = ['ل', 'ب', 'ف', 'س', 'و', 'ي', 'ت', 'ن', 'ا',];\n\n// length three suffixes\nconst s3 = ['\\u062a\\u0645\\u0644', '\\u0647\\u0645\\u0644',\n    '\\u062a\\u0627\\u0646', '\\u062a\\u064a\\u0646',\n    '\\u0643\\u0645\\u0644'];\n\n// length two suffixes\nconst s2 = ['\\u0648\\u0646', '\\u0627\\u062a', '\\u0627\\u0646',\n    '\\u064a\\u0646', '\\u062a\\u0646', '\\u0643\\u0645',\n    '\\u0647\\u0646', '\\u0646\\u0627', '\\u064a\\u0627',\n    '\\u0647\\u0627', '\\u062a\\u0645', '\\u0643\\u0646',\n    '\\u0646\\u064a', '\\u0648\\u0627', '\\u0645\\u0627',\n    '\\u0647\\u0645'];\n\n// length one suffixes\nconst s1 = ['\\u0629', '\\u0647', '\\u064a', '\\u0643', '\\u062a',\n    '\\u0627', '\\u0646', 'و'];\n\nconst pr4 = {\n    0: ['\\u0645'], 1: ['\\u0627'],\n    2: ['\\u0627', '\\u0648', '\\u064A'], 3: ['\\u0629']\n};\n\n\nconst re_short_vowels = /[\\u064B-\\u0652]/g;\nconst re_hamza = /[\\u0621\\u0623\\u0624\\u0625\\u0626]/g;\nconst re_initial_hamza = /^[\\u0622\\u0623\\u0625]/;\n\nconst stop_words = ['\\u064a\\u0643\\u0648\\u0646',\n    '\\u0648\\u0644\\u064a\\u0633',\n    '\\u0648\\u0643\\u0627\\u0646',\n    '\\u0643\\u0630\\u0644\\u0643',\n    '\\u0627\\u0644\\u062a\\u064a',\n    '\\u0648\\u0628\\u064a\\u0646',\n    '\\u0639\\u0644\\u064a\\u0647\\u0627',\n    '\\u0645\\u0633\\u0627\\u0621',\n    '\\u0627\\u0644\\u0630\\u064a',\n    '\\u0648\\u0643\\u0627\\u0646\\u062a',\n    '\\u0648\\u0644\\u0643\\u0646',\n    '\\u0648\\u0627\\u0644\\u062a\\u064a',\n    '\\u062a\\u0643\\u0648\\u0646',\n    '\\u0627\\u0644\\u064a\\u0648\\u0645',\n    '\\u0627\\u0644\\u0644\\u0630\\u064a\\u0646',\n    '\\u0639\\u0644\\u064a\\u0647',\n    '\\u0643\\u0627\\u0646\\u062a',\n    '\\u0644\\u0630\\u0644\\u0643',\n    '\\u0623\\u0645\\u0627\\u0645',\n    '\\u0647\\u0646\\u0627\\u0643',\n    '\\u0645\\u0646\\u0647\\u0627',\n    '\\u0645\\u0627\\u0632\\u0627\\u0644',\n    '\\u0644\\u0627\\u0632\\u0627\\u0644',\n    '\\u0644\\u0627\\u064a\\u0632\\u0627\\u0644',\n    '\\u0645\\u0627\\u064a\\u0632\\u0627\\u0644',\n    '\\u0627\\u0635\\u0628\\u062d',\n    '\\u0623\\u0635\\u0628\\u062d',\n    '\\u0623\\u0645\\u0633\\u0649',\n    '\\u0627\\u0645\\u0633\\u0649',\n    '\\u0623\\u0636\\u062d\\u0649',\n    '\\u0627\\u0636\\u062d\\u0649',\n    '\\u0645\\u0627\\u0628\\u0631\\u062d',\n    '\\u0645\\u0627\\u0641\\u062a\\u0626',\n    '\\u0645\\u0627\\u0627\\u0646\\u0641\\u0643',\n    '\\u0644\\u0627\\u0633\\u064a\\u0645\\u0627',\n    '\\u0648\\u0644\\u0627\\u064a\\u0632\\u0627\\u0644',\n    '\\u0627\\u0644\\u062d\\u0627\\u0644\\u064a',\n    '\\u0627\\u0644\\u064a\\u0647\\u0627',\n    '\\u0627\\u0644\\u0630\\u064a\\u0646',\n    '\\u0641\\u0627\\u0646\\u0647',\n    '\\u0648\\u0627\\u0644\\u0630\\u064a',\n    '\\u0648\\u0647\\u0630\\u0627',\n    '\\u0644\\u0647\\u0630\\u0627',\n    '\\u0641\\u0643\\u0627\\u0646',\n    '\\u0633\\u062a\\u0643\\u0648\\u0646',\n    '\\u0627\\u0644\\u064a\\u0647',\n    '\\u064a\\u0645\\u0643\\u0646',\n    '\\u0628\\u0647\\u0630\\u0627',\n    '\\u0627\\u0644\\u0630\\u0649'];\n\n\nconst patterns = {\n    8: [],\n    7: [\n        /\\u0627\\u0633\\u062a(.)(.)\\u0627(.)/, // استفعال\n    ],\n    6: [\n        /\\u0627\\u0633\\u062a(.)(.)(.)/,      // استفعل\n        /\\u0645\\u0633\\u062a(.)(.)(.)/,      // مستفعل\n        /\\u0645(.)\\u0627(.)(.)\\u0647/,      // مفاعلة\n        /\\u0627(.)\\u062a(.)\\u0627(.)/,      // افتعال\n        /\\u0627(.)\\u0639\\u0648(.)(.)/,      // افعوعل\n        /\\u062a(.)\\u0627(.)\\u064a(.)/,      // تفاعيل\n        /\\u0645(.)\\u0627(.)\\u064a(.)/,      // مفاعيل\n        /\\u0627(.)(.)(\\u064a)\\u0627\\u0627/, // افعياء\n        /(.)(.)(.)\\u064a\\u0627\\u0627/,      // فعلياء\n        /(.)\\u0648\\u0627(.)\\u064a(.)/,      // فواعيل\n        /\\u0645\\u062a(.)\\u0627(.)(.)/,      // متفاعل\n\n        /* 64 */\n        /\\u0627(.)(.)(.)\\u0627(.)/,         // افعلال\n        /\\u0645\\u062a(.)(.)(.)(.)/,         // متفعلل\n        /(.)(.)(.)(.)\\u0627\\u0627/,         // فعللاء\n    ],\n    5: [\n        /\\u0627(.)\\u062a(.)(.)/,            // افتعل\n        /\\u0627(.)\\u0627(.)(.)/,            // افاعل\n        /\\u0645(.)(.)\\u0648(.)/,            // مفعول\n        /\\u0645(.)(.)\\u0627(.)/,            // مفعال\n        /\\u0645(.)(.)\\u064a(.)/,            // مفعيل\n        /\\u0645(.)(.)(.)\\u0647/,            // مفعلة\n        /\\u062a(.)(.)(.)\\u0647/,            // تفعلة\n        /\\u0627(.)(.)(.)\\u0647/,            // أفعلة\n        /\\u0645(.)\\u062a(.)(.)/,            // مفتعل\n        /\\u064a(.)\\u062a(.)(.)/,            // يفتعل\n        /\\u062a(.)\\u062a(.)(.)/,            // تفتعل\n        /\\u0645(.)\\u0627(.)(.)/,            // مفاعل\n        /\\u062a(.)\\u0627(.)(.)/,            // تفاعل\n        /(.)(.)\\u0648(.)\\u0647/,            // فعولة\n        /(.)(.)\\u0627(.)\\u0647/,            // فعالة\n        /\\u0627\\u0646(.)(.)(.)/,            // انفعل\n        /\\u0645\\u0646(.)(.)(.)/,            // منفعل\n        /\\u0627(.)(.)\\u0627(.)/,            // افعال\n        /(.)(.)(.)\\u0627\\u0646/,            // فعلان\n        /\\u062a(.)(.)\\u064a(.)/,            // تفعيل\n        /(.)\\u0627(.)\\u0648(.)/,            // فاعول\n        /(.)\\u0648\\u0627(.)(.)/,            // فواعل\n        /(.)(.)\\u0627\\u0626(.)/,            // فعائل\n        /(.)\\u0627(.)(.)\\u0647/,            // فاعلة\n        /(.)(.)\\u0627(.)\\u064a/,            // فعالي\n        /(.)(.)(.)\\u0627\\u0627/,            // فعلاء\n    \n        /\\u062a\\u0645(.)(.)(.)/,            // تمفعل\n\n        /* 54 */\n        /\\u0645(.)(.)(.)(.)/,               // مفعلل\n        /\\u062a(.)(.)(.)(.)/,               // تفعلل\n        /\\u0627(.)(.)(.)(.)/,               // افعلل\n        /(.)(.)(.)(.)\\u0647/,               // فعللة\n        /(.)(.)\\u0627(.)(.)/,               // فعالل\n        /(.)(.)(.)\\u0648(.)/,               // فعلول\n    ],\n    4: [\n        /\\u0645(.)(.)(.)/,                  // مفعل\n        /(.)\\u0627(.)(.)/,                  // فاعل\n        /(.)(.)\\u0648(.)/,                  // فعول\n        /(.)(.)\\u064a(.)/,                  // فعيل\n        /(.)(.)\\u0627(.)/,                  // فعال\n        /(.)(.)(.)\\u0647/,                  // فعلة\n    \n        /\\u0627(.)(.)(.)/,                  // افعل\n        /\\u062a(.)(.)(.)/,                  // تفعل\n        /(.)\\u0648(.)(.)/,                  // فوعل\n        /(.)\\u064a(.)(.)/,                  // فيعل\n        /(.)(.)(.)\\u0646/,                  // فعلن\n    ],\n    3: [\n        /(.)(.)(.)/\n    ]\n};\n\nexport default class Stemmer {\n    stem(token) {\n        token = token.trim();\n        token = token.replace(re_short_vowels, '');\n\n        if (stop_words.includes(token)) {\n            return token;\n        }\n\n        token = this.preNormalize(token);\n\n        token = this.pre432(token);     \n        token = this.suf32(token);     \n\n        let matches = this.getMatches(token, 'suffix');\n        matches = matches.concat(this.getMatches(token, 'prefix'));\n        matches = matches.map(m => this.postNormalize(m));\n        matches = matches.reduce((res, current) => {\n            !res.includes(current) && res.push(current);\n            return res;\n        }, []);\n        return matches;\n    }\n\n    pre432(word) {\n        if (word.length >= 7) {\n            for (let pre4 of p4) {\n                if (word.startsWith(pre4))\n                    return word.substr(4);\n            }\n        }\n        if (word.length >= 6) {\n            for (let pre3 of p3) {\n                if (word.startsWith(pre3))\n                    return word.substr(3);\n            }\n        }\n        if (word.length >= 5) {\n            for (let pre2 of p2) {\n                if (word.startsWith(pre2))\n                    return word.substr(2);\n            }\n        }\n        return word;\n    }\n\n    suf32(word) {\n        if (word.length >= 6) {\n            for (let suf3 of s3) {\n                if (word.endsWith(suf3))\n                    return word.substr(0, word.length - 3);\n            }\n        }\n        if (word.length >= 5) {\n            for (let suf2 of s2) {\n                if (word.endsWith(suf2))\n                    return word.substr(0, word.length - 2);\n            }\n        }\n\n        return word;\n    }\n\n    getMatches(token, removeFirst=\"suffix\") {\n        let originalToken = token;\n        let len = token.length;\n        const matches = [];\n        while (len >= 3) {\n            for (let pat of patterns[len]) {\n                let match;\n                if (match = pat.exec(token)) {\n                    matches.push(match.slice(1).join(''));\n                }\n            }\n            token = this.removeOne(token, removeFirst);\n\n            if (token.length == len) {\n                break;\n            }\n            len -= 1;\n        }\n        if (matches.length == 0) {\n            matches.push(originalToken);\n        }\n        let finalMatches = [];\n        matches.forEach((match) => {\n            if (match.length > 3 & match !== originalToken) {\n                finalMatches = finalMatches.concat(this.getMatches(match, removeFirst));\n            } else {\n                finalMatches.push(match);\n            }\n        });\n        return finalMatches;\n    }\n\n    removeOne(token, removeFirst=\"suffix\") {\n        const len = token.length;\n        if (removeFirst == 'suffix') {\n            token = this.suf1(token);\n            if (token.length == len) {\n                token = this.pre1(token);\n            }\n        } else {\n            token = this.pre1(token);\n            if (token.length == len) {\n                token = this.suf1(token);\n            }\n        }\n        return token;\n    }\n\n    suf1(word) {\n        /* \"\"\"normalize short sufix\"\"\" */\n        for (let sf1 of s1) {\n            if (word.endsWith(sf1))\n                return word.substr(0, word.length - 1);\n        }\n\n        return word;\n    }\n\n    pre1(word) {\n        /* \"\"\"normalize short prefix\"\"\" */\n        for (let sp1 of p1) {\n            if (word.startsWith(sp1))\n                return word.substr(1);\n        }\n\n        return word;\n    }\n\n    preNormalize(token) {\n        token = token.replace(re_hamza, 'ا');\n        token = token.replace(/ى/, 'ي');\n        token = token.replace(/ة$/, 'ه');\n        return token;\n    }\n\n    postNormalize(token) {\n        if (token.length == 3) {\n            const c1 = token[0].replace(/[وي]/, 'ا');\n            const c2 = token[1].replace(/[او]/, 'ي');\n            const c3 = token[2].replace(/[اوه]/, 'ي');\n            token = c1 + c2 + c3;\n        }\n        if (token.length == 2) {\n            token = token + 'ي';\n        }\n        return token;\n    }\n}","import Stemmer from './src/Stemmer';\n\nmodule.exports = Stemmer;"]}