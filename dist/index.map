{"version":3,"sources":["src/AffixCleaner.js","src/Stemmer.js","index.js"],"names":["prefixes","suffixes","AffixCleaner","token","currentToken","prefix","suffix","count","priority","bothSides","canRemoveAffix","order","affix","forEach","affixType","console","log","len","length","remove","affixList","startsWith","isValidPrefix","wholePrefix","pList","includes","substr","endsWith","isValidSuffix","wholeSuffix","sList","re_short_vowels","re_hamza","re_initial_hamza","stop_words","patterns","Stemmer","affixCleaner","trim","replace","preNormalize","matches","getMatches","concat","map","m","postNormalize","reduce","res","current","push","stem","normalized","removeAll","removeFirst","inRecursion","originalToken","getMatchesForPatterns","finalMatches","match","pat","exec","slice","join","source","c1","c2","c3","module","exports"],"mappings":"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","file":"index.map","sourceRoot":"..","sourcesContent":["const prefixes = {\n    4: ['وكال', 'وبال', 'فبال'],\n    3: ['وال', 'فال', 'كال', 'بال', 'ولل', 'فلل'],\n    2: ['ال', 'لل', 'لي', 'لت', 'لن', 'لا', 'فل', 'فس', 'في', 'فت', 'فن', 'فا', 'سي', 'ست', 'سن', 'سا', 'ول', 'وس', 'وي', 'وت', 'ون', 'وا',],\n    1: ['ل', 'ب', 'ف', 'س', 'و', 'ي', 'ت', 'ن', 'ا',]\n};\n\nconst suffixes = {\n    4: [],\n    3: ['\\u062a\\u0645\\u0644', '\\u0647\\u0645\\u0644',\n    '\\u062a\\u0627\\u0646', '\\u062a\\u064a\\u0646',\n    '\\u0643\\u0645\\u0644'],\n    2: ['\\u0648\\u0646', '\\u0627\\u062a', '\\u0627\\u0646',\n    '\\u064a\\u0646', '\\u062a\\u0646', '\\u0643\\u0645',\n    '\\u0647\\u0646', '\\u0646\\u0627', '\\u064a\\u0627',\n    '\\u0647\\u0627', '\\u062a\\u0645', '\\u0643\\u0646',\n    '\\u0646\\u064a', '\\u0648\\u0627', '\\u0645\\u0627',\n    '\\u0647\\u0645'],\n    1: ['\\u0629', '\\u0647', '\\u064a', '\\u0643', '\\u062a',\n    '\\u0627', '\\u0646', 'و']\n};\n\nexport default class AffixCleaner {\n    constructor(token) {\n        this.token = token;\n        this.currentToken = token;\n        this.prefix = '';\n        this.suffix = '';\n    }\n\n    remove(count, priority=\"suffix\", bothSides=false) {\n        if (!this.canRemoveAffix(count)) {\n            return this.currentToken;\n        }\n\n        let order = priority == 'suffix' ? ['Suffix', 'Prefix'] : ['Prefix', 'Suffix'];\n        let affix = null;\n        order.forEach((affixType) => {\n            if (!affix || bothSides) {\n                affix = this['get'+affixType](count);\n                this['remove'+affixType](affix);\n            }\n        });\n\n        console.log('affixRemover:', this.currentToken);\n        return this.currentToken;\n    }\n\n    removeAll() {\n        let token = this.currentToken;\n        while(true) {\n            const len = token.length;\n            token = this.remove(1, 'suffix', true);\n            \n            if (len == token.length)\n                break;\n        }\n        return token;\n    }\n\n    getPrefix(count) {\n        const token = this.currentToken;\n        let affixList = prefixes[count] || [];\n\n        for (let prefix of affixList) {\n            if (token.startsWith(prefix) && this.isValidPrefix(prefix)) {\n                return prefix;\n            }\n        }\n        return '';\n    }\n\n    isValidPrefix(prefix) {\n        const wholePrefix = this.prefix + prefix;\n        const pList = prefixes[wholePrefix.length];\n        if (pList && pList.includes(wholePrefix)) {\n            return true;\n        }\n        return false;\n    }\n\n    removePrefix(prefix) {\n        if (this.currentToken.startsWith(prefix)) {\n            this.currentToken = this.currentToken.substr(prefix.length);\n            this.prefix = this.prefix + prefix;\n        }\n    }\n\n    getSuffix(count) {\n        const token = this.currentToken;\n        let affixList = suffixes[count] || [];\n\n        for (let suffix of affixList) {\n            if (token.endsWith(suffix) && this.isValidSuffix(suffix)) {\n                return suffix;\n            }\n        }\n        return '';\n    }\n\n    isValidSuffix(suffix) {\n        return true;\n        const wholeSuffix = suffix + this.suffix;\n        const sList = suffixes[wholeSuffix.length];\n\n        if (sList && sList.includes(wholeSuffix)) {\n            return true;\n        }\n        return false;\n    }\n\n    removeSuffix(suffix) {\n        if (this.currentToken.endsWith(suffix)) {\n            this.currentToken = this.currentToken.substr(0, this.currentToken.length - suffix.length);\n            this.suffix = suffix + this.suffix;\n        }\n\n    }\n\n    canRemoveAffix(count) {\n        return this.currentToken.length - count >= 3;\n    }\n}","import AffixCleaner from './AffixCleaner';\n\nconst re_short_vowels = /[\\u064B-\\u0652]/g;\nconst re_hamza = /[\\u0621\\u0623\\u0624\\u0625\\u0626]/g;\nconst re_initial_hamza = /^[\\u0622\\u0623\\u0625]/;\n\nconst stop_words = ['\\u064a\\u0643\\u0648\\u0646',\n    '\\u0648\\u0644\\u064a\\u0633',\n    '\\u0648\\u0643\\u0627\\u0646',\n    '\\u0643\\u0630\\u0644\\u0643',\n    '\\u0627\\u0644\\u062a\\u064a',\n    '\\u0648\\u0628\\u064a\\u0646',\n    '\\u0639\\u0644\\u064a\\u0647\\u0627',\n    '\\u0645\\u0633\\u0627\\u0621',\n    '\\u0627\\u0644\\u0630\\u064a',\n    '\\u0648\\u0643\\u0627\\u0646\\u062a',\n    '\\u0648\\u0644\\u0643\\u0646',\n    '\\u0648\\u0627\\u0644\\u062a\\u064a',\n    '\\u062a\\u0643\\u0648\\u0646',\n    '\\u0627\\u0644\\u064a\\u0648\\u0645',\n    '\\u0627\\u0644\\u0644\\u0630\\u064a\\u0646',\n    '\\u0639\\u0644\\u064a\\u0647',\n    '\\u0643\\u0627\\u0646\\u062a',\n    '\\u0644\\u0630\\u0644\\u0643',\n    '\\u0623\\u0645\\u0627\\u0645',\n    '\\u0647\\u0646\\u0627\\u0643',\n    '\\u0645\\u0646\\u0647\\u0627',\n    '\\u0645\\u0627\\u0632\\u0627\\u0644',\n    '\\u0644\\u0627\\u0632\\u0627\\u0644',\n    '\\u0644\\u0627\\u064a\\u0632\\u0627\\u0644',\n    '\\u0645\\u0627\\u064a\\u0632\\u0627\\u0644',\n    '\\u0627\\u0635\\u0628\\u062d',\n    '\\u0623\\u0635\\u0628\\u062d',\n    '\\u0623\\u0645\\u0633\\u0649',\n    '\\u0627\\u0645\\u0633\\u0649',\n    '\\u0623\\u0636\\u062d\\u0649',\n    '\\u0627\\u0636\\u062d\\u0649',\n    '\\u0645\\u0627\\u0628\\u0631\\u062d',\n    '\\u0645\\u0627\\u0641\\u062a\\u0626',\n    '\\u0645\\u0627\\u0627\\u0646\\u0641\\u0643',\n    '\\u0644\\u0627\\u0633\\u064a\\u0645\\u0627',\n    '\\u0648\\u0644\\u0627\\u064a\\u0632\\u0627\\u0644',\n    '\\u0627\\u0644\\u062d\\u0627\\u0644\\u064a',\n    '\\u0627\\u0644\\u064a\\u0647\\u0627',\n    '\\u0627\\u0644\\u0630\\u064a\\u0646',\n    '\\u0641\\u0627\\u0646\\u0647',\n    '\\u0648\\u0627\\u0644\\u0630\\u064a',\n    '\\u0648\\u0647\\u0630\\u0627',\n    '\\u0644\\u0647\\u0630\\u0627',\n    '\\u0641\\u0643\\u0627\\u0646',\n    '\\u0633\\u062a\\u0643\\u0648\\u0646',\n    '\\u0627\\u0644\\u064a\\u0647',\n    '\\u064a\\u0645\\u0643\\u0646',\n    '\\u0628\\u0647\\u0630\\u0627',\n    '\\u0627\\u0644\\u0630\\u0649'];\n\n\nconst patterns = {\n    8: [],\n    7: [\n        /\\u0627\\u0633\\u062a(.)(.)\\u0627(.)/, // استفعال\n    ],\n    6: [\n        /\\u0627\\u0633\\u062a(.)(.)(.)/,      // استفعل\n        /\\u0645\\u0633\\u062a(.)(.)(.)/,      // مستفعل\n        /\\u0645(.)\\u0627(.)(.)\\u0647/,      // مفاعلة\n        /\\u0627(.)\\u062a(.)\\u0627(.)/,      // افتعال\n        /\\u0627(.)\\u0639\\u0648(.)(.)/,      // افعوعل\n        /\\u062a(.)\\u0627(.)\\u064a(.)/,      // تفاعيل\n        /\\u0645(.)\\u0627(.)\\u064a(.)/,      // مفاعيل\n        /\\u0627(.)(.)(\\u064a)\\u0627\\u0627/, // افعياء\n        /(.)(.)(.)\\u064a\\u0627\\u0627/,      // فعلياء\n        /(.)\\u0648\\u0627(.)\\u064a(.)/,      // فواعيل\n        /\\u0645\\u062a(.)\\u0627(.)(.)/,      // متفاعل\n        /\\u0627\\u0646(.)(.)\\u0627(.)/,      // انفعال\n        /* 64 */\n        /\\u0627(.)(.)(.)\\u0627(.)/,         // افعلال\n        /\\u0645\\u062a(.)(.)(.)(.)/,         // متفعلل\n        /(.)(.)(.)(.)\\u0627\\u0627/,         // فعللاء\n    ],\n    5: [\n        /\\u0627(.)\\u062a(.)(.)/,            // افتعل\n        /\\u0627(.)\\u0627(.)(.)/,            // افاعل\n        /\\u0645(.)(.)\\u0648(.)/,            // مفعول\n        /\\u0645(.)(.)\\u0627(.)/,            // مفعال\n        /\\u0645(.)(.)\\u064a(.)/,            // مفعيل\n        /\\u0645(.)(.)(.)\\u0647/,            // مفعلة\n        /\\u062a(.)(.)(.)\\u0647/,            // تفعلة\n        /\\u0627(.)(.)(.)\\u0647/,            // أفعلة\n        /\\u0645(.)\\u062a(.)(.)/,            // مفتعل\n        /\\u064a(.)\\u062a(.)(.)/,            // يفتعل\n        /\\u062a(.)\\u062a(.)(.)/,            // تفتعل\n        /\\u0645(.)\\u0627(.)(.)/,            // مفاعل\n        /\\u062a(.)\\u0627(.)(.)/,            // تفاعل\n        /(.)(.)\\u0648(.)\\u0647/,            // فعولة\n        /(.)(.)\\u0627(.)\\u0647/,            // فعالة\n        /\\u0627\\u0646(.)(.)(.)/,            // انفعل\n        /\\u0645\\u0646(.)(.)(.)/,            // منفعل\n        /\\u0627(.)(.)\\u0627(.)/,            // افعال\n        /(.)(.)(.)\\u0627\\u0646/,            // فعلان\n        /\\u062a(.)(.)\\u064a(.)/,            // تفعيل\n        /(.)\\u0627(.)\\u0648(.)/,            // فاعول\n        /(.)\\u0648\\u0627(.)(.)/,            // فواعل\n        /(.)(.)\\u0627\\u0626(.)/,            // فعائل\n        /(.)\\u0627(.)(.)\\u0647/,            // فاعلة\n        /(.)(.)\\u0627(.)\\u064a/,            // فعالي\n        /(.)(.)(.)\\u0627\\u0627/,            // فعلاء\n\n        /\\u062a\\u0645(.)(.)(.)/,            // تمفعل\n\n        /* 54 */\n        /\\u0645(.)(.)(.)(.)/,               // مفعلل\n        /\\u062a(.)(.)(.)(.)/,               // تفعلل\n        /\\u0627(.)(.)(.)(.)/,               // افعلل\n        /(.)(.)(.)(.)\\u0647/,               // فعللة\n        /(.)(.)\\u0627(.)(.)/,               // فعالل\n        /(.)(.)(.)\\u0648(.)/,               // فعلول\n    ],\n    4: [\n        /\\u0645(.)(.)(.)/,                  // مفعل\n        /(.)\\u0627(.)(.)/,                  // فاعل\n        /(.)(.)\\u0648(.)/,                  // فعول\n        /(.)(.)\\u064a(.)/,                  // فعيل\n        /(.)(.)\\u0627(.)/,                  // فعال\n        /(.)(.)(.)\\u0647/,                  // فعلة\n\n        /\\u0627(.)(.)(.)/,                  // افعل\n        /\\u062a(.)(.)(.)/,                  // تفعل\n        /(.)\\u0648(.)(.)/,                  // فوعل\n        /(.)\\u064a(.)(.)/,                  // فيعل\n        /(.)(.)(.)\\u0646/,                  // فعلن\n    ],\n    3: [\n        /(.)(.)(.)/\n    ]\n};\n\nexport default class Stemmer {\n    constructor() {\n        this.affixCleaner = null;\n    }\n\n    stem(token) {\n\n        token = token.trim();\n        token = token.replace(re_short_vowels, '');\n\n        if (stop_words.includes(token) || token.length < 3) {\n            return token;\n        }\n\n        token = this.preNormalize(token);\n\n        this.affixCleaner = new AffixCleaner(token);\n        token = this.affixCleaner.remove(4, 'prefix', true);\n        token = this.affixCleaner.remove(3, 'prefix', true);\n        token = this.affixCleaner.remove(2, 'prefix', true);\n\n        let matches = this.getMatches(token, 'suffix');\n        matches = matches.concat(this.getMatches(token, 'prefix'));\n        matches = matches.map(m => this.postNormalize(m));\n\n        matches = matches.reduce((res, current) => {\n            !res.includes(current) && res.push(current);\n            return res;\n        }, []);\n\n        return {\n            stem: matches,\n            normalized: this.affixCleaner.removeAll()\n        };\n    }\n\n    getMatches(token, removeFirst = \"suffix\", inRecursion=false) {\n        let originalToken = token;\n        let len = token.length;\n        let matches = [];\n        while (len > 3) {\n            matches = matches.concat(this.getMatchesForPatterns(token, patterns[len]));\n            // token = this.removeOne(token, removeFirst);\n            token = this.affixCleaner.remove(1, 'suffix', false);\n\n            if (token.length == len) {\n                break;\n            }\n            len -= 1;\n        }\n\n        if (matches.length == 0 && !inRecursion) {\n            matches = matches.concat(this.getMatchesForPatterns(token, patterns[3]));\n        }\n\n        let finalMatches = [];\n        matches.forEach((match) => {\n            if (match.length > 3 && match !== originalToken) {\n                finalMatches = finalMatches.concat(this.getMatches(match, removeFirst, true));\n            } else {\n                finalMatches.push(match);\n            }\n        });\n\n\n        return finalMatches;\n    }\n\n    getMatchesForPatterns(token, patterns) {\n        const matches = [];\n        for (let pat of patterns) {\n            let match;\n            if (match = pat.exec(token)) {\n                console.log('match:', match.slice(1).join(''), pat.source);\n                matches.push(match.slice(1).join(''));\n            }\n        }\n        return matches;\n    }\n\n    preNormalize(token) {\n        token = token.replace(re_hamza, 'ا');\n        token = token.replace(/ى/, 'ي');\n        token = token.replace(/ة$/, 'ه');\n        return token;\n    }\n\n    postNormalize(token) {\n        if (token.length == 3) {\n            // const c1 = token[0].replace(/[وي]/, 'ا');\n            const c1 = token[0].replace(/[ي]/, 'ا');\n            const c2 = token[1].replace(/[او]/, 'ي');\n            const c3 = token[2].replace(/[اوه]/, 'ي');\n            token = c1 + c2 + c3;\n        }\n        if (token.length == 2) {\n            token = token + 'ي';\n        }\n        return token;\n    }\n}","import Stemmer from './src/Stemmer';\n\nmodule.exports = Stemmer;"]}