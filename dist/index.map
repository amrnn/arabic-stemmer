{"version":3,"sources":["index.js"],"names":["p3","p2","p1","s3","s2","s1","pr4","pr53","re_short_vowels","re_hamza","re_initial_hamza","stop_words","ArabicStemmer","token","norm","includes","pre32","suf32","waw","length","pro_w4","pro_w53","end_w5","pro_w6","end_w6","suf1","pre1","word","num","replace","pre3","startsWith","substr","pre2","suf3","endsWith","suf2","pro_w54","pro_w64","sf1","sp1"],"mappings":"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","file":"index.map","sourceRoot":"..","sourcesContent":["// length three prefixes\nconst p3 = ['\\u0643\\u0627\\u0644', '\\u0628\\u0627\\u0644',\n    '\\u0648\\u0644\\u0644', '\\u0648\\u0627\\u0644'];\n\n// length two prefixes\nconst p2 = ['\\u0627\\u0644', '\\u0644\\u0644'];\n\n// length one prefixes\nconst p1 = ['\\u0644', '\\u0628', '\\u0641', '\\u0633', '\\u0648',\n    '\\u064a', '\\u062a', '\\u0646', '\\u0627'];\n\n// length three suffixes\nconst s3 = ['\\u062a\\u0645\\u0644', '\\u0647\\u0645\\u0644',\n    '\\u062a\\u0627\\u0646', '\\u062a\\u064a\\u0646',\n    '\\u0643\\u0645\\u0644',\n\n    '\\u0648\\u0646\\u0627', ];\n\n// length two suffixes\nconst s2 = ['\\u0648\\u0646', '\\u0627\\u062a', '\\u0627\\u0646',\n    '\\u064a\\u0646', '\\u062a\\u0646', '\\u0643\\u0645',\n    '\\u0647\\u0646', '\\u0646\\u0627', '\\u064a\\u0627',\n    '\\u0647\\u0627', '\\u062a\\u0645', '\\u0643\\u0646',\n    '\\u0646\\u064a', '\\u0648\\u0627', '\\u0645\\u0627',\n    '\\u0647\\u0645'];\n\n// length one suffixes\nconst s1 = ['\\u0629', '\\u0647', '\\u064a', '\\u0643', '\\u062a',\n    '\\u0627', '\\u0646'];\n\n// groups of length four patterns\nconst pr4 = {\n    0: ['\\u0645'], 1: ['\\u0627'],\n    2: ['\\u0627', '\\u0648', '\\u064A'], 3: ['\\u0629']\n};\n\n// Groups of length five patterns and length three roots\nconst pr53 = {\n    0: ['\\u0627', '\\u062a'],\n    1: ['\\u0627', '\\u064a', '\\u0648'],\n    2: ['\\u0627', '\\u062a', '\\u0645'],\n    3: ['\\u0645', '\\u064a', '\\u062a'],\n    4: ['\\u0645', '\\u062a'],\n    5: ['\\u0627', '\\u0648'],\n    6: ['\\u0627', '\\u0645']\n};\n\nconst re_short_vowels = /[\\u064B-\\u0652]/;\nconst re_hamza = /[\\u0621\\u0624\\u0626]/;\nconst re_initial_hamza = /^[\\u0622\\u0623\\u0625]/;\n\nconst stop_words = ['\\u064a\\u0643\\u0648\\u0646',\n    '\\u0648\\u0644\\u064a\\u0633',\n    '\\u0648\\u0643\\u0627\\u0646',\n    '\\u0643\\u0630\\u0644\\u0643',\n    '\\u0627\\u0644\\u062a\\u064a',\n    '\\u0648\\u0628\\u064a\\u0646',\n    '\\u0639\\u0644\\u064a\\u0647\\u0627',\n    '\\u0645\\u0633\\u0627\\u0621',\n    '\\u0627\\u0644\\u0630\\u064a',\n    '\\u0648\\u0643\\u0627\\u0646\\u062a',\n    '\\u0648\\u0644\\u0643\\u0646',\n    '\\u0648\\u0627\\u0644\\u062a\\u064a',\n    '\\u062a\\u0643\\u0648\\u0646',\n    '\\u0627\\u0644\\u064a\\u0648\\u0645',\n    '\\u0627\\u0644\\u0644\\u0630\\u064a\\u0646',\n    '\\u0639\\u0644\\u064a\\u0647',\n    '\\u0643\\u0627\\u0646\\u062a',\n    '\\u0644\\u0630\\u0644\\u0643',\n    '\\u0623\\u0645\\u0627\\u0645',\n    '\\u0647\\u0646\\u0627\\u0643',\n    '\\u0645\\u0646\\u0647\\u0627',\n    '\\u0645\\u0627\\u0632\\u0627\\u0644',\n    '\\u0644\\u0627\\u0632\\u0627\\u0644',\n    '\\u0644\\u0627\\u064a\\u0632\\u0627\\u0644',\n    '\\u0645\\u0627\\u064a\\u0632\\u0627\\u0644',\n    '\\u0627\\u0635\\u0628\\u062d',\n    '\\u0623\\u0635\\u0628\\u062d',\n    '\\u0623\\u0645\\u0633\\u0649',\n    '\\u0627\\u0645\\u0633\\u0649',\n    '\\u0623\\u0636\\u062d\\u0649',\n    '\\u0627\\u0636\\u062d\\u0649',\n    '\\u0645\\u0627\\u0628\\u0631\\u062d',\n    '\\u0645\\u0627\\u0641\\u062a\\u0626',\n    '\\u0645\\u0627\\u0627\\u0646\\u0641\\u0643',\n    '\\u0644\\u0627\\u0633\\u064a\\u0645\\u0627',\n    '\\u0648\\u0644\\u0627\\u064a\\u0632\\u0627\\u0644',\n    '\\u0627\\u0644\\u062d\\u0627\\u0644\\u064a',\n    '\\u0627\\u0644\\u064a\\u0647\\u0627',\n    '\\u0627\\u0644\\u0630\\u064a\\u0646',\n    '\\u0641\\u0627\\u0646\\u0647',\n    '\\u0648\\u0627\\u0644\\u0630\\u064a',\n    '\\u0648\\u0647\\u0630\\u0627',\n    '\\u0644\\u0647\\u0630\\u0627',\n    '\\u0641\\u0643\\u0627\\u0646',\n    '\\u0633\\u062a\\u0643\\u0648\\u0646',\n    '\\u0627\\u0644\\u064a\\u0647',\n    '\\u064a\\u0645\\u0643\\u0646',\n    '\\u0628\\u0647\\u0630\\u0627',\n    '\\u0627\\u0644\\u0630\\u0649'];\n\nexport default class ArabicStemmer {\n    constructor() { }\n\n    stem(token) {\n        /*\"\"\"\n        Stemming a word token using the ISRI stemmer.\n        \"\"\"*/\n        token = this.norm(token, 1);   // remove diacritics which representing Arabic short vowels\n        if (stop_words.includes(token)) {\n            return token;              // exclude stop words from being processed\n        }\n        token = this.pre32(token);     // remove length three and length two prefixes in this order\n        token = this.suf32(token);     // remove length three and length two suffixes in this order\n        token = this.waw(token);       // remove connective ‘و’ if it precedes a word beginning with ‘و’\n        token = this.norm(token, 2);   // normalize initial hamza to bare alif\n        // if 4 <= word length <= 7, then stem; otherwise, no stemming\n        if (token.length == 4)         // length 4 word\n            token = this.pro_w4(token);\n\n        else if (token.length == 5) {  // length 5 word\n            token = this.pro_w53(token);\n            token = this.end_w5(token);\n        }\n        else if (token.length == 6) {  // length 6 word\n            token = this.pro_w6(token);\n            token = this.end_w6(token);\n        }\n        else if (token.length == 7) {  // length 7 word\n            token = this.suf1(token);\n            if (token.length == 7)\n                token = this.pre1(token);\n            if (token.length == 6) {\n                token = this.pro_w6(token)\n                token = this.end_w6(token)\n            }\n        }\n        return token\n    }\n\n    norm(word, num = 3) {\n        /*\"\"\"\n        normalization:\n        num=1  normalize diacritics\n        num=2  normalize initial hamza\n        num=3  both 1&2\n        \"\"\"*/\n        if (num == 1)\n            word = word.replace(re_short_vowels, '');\n        else if (num == 2)\n            word = word.replace(re_initial_hamza, '\\u0627');\n        else if (num == 3) {\n            word = word.replace(re_short_vowels, '');\n            word = word.replace(re_initial_hamza, '\\u0627');\n        }\n        return word;\n    }\n\n    pre32(word) {\n        /*\"\"\"remove length three and length two prefixes in this order\"\"\"*/\n        if (word.length >= 6) {\n            for (let pre3 of p3) {\n                if (word.startsWith(pre3))\n                    return word.substr(3);\n            }\n        }\n        if (word.length >= 5) {\n            for (let pre2 of p2) {\n                if (word.startsWith(pre2))\n                    return word.substr(2);\n            }\n        }\n        return word;\n    }\n\n    suf32(word) {\n        /*\"\"\"remove length three and length two suffixes in this order\"\"\"*/\n        if (word.length >= 6) {\n            for (let suf3 of s3) {\n                if (word.endsWith(suf3))\n                    return word.substr(0, word.length - 3);\n            }\n        }\n        if (word.length >= 5) {\n            for (let suf2 of s2) {\n                if (word.endsWith(suf2))\n                    return word.substr(0, word.length - 2);\n            }\n        }\n\n        return word;\n    }\n\n    waw(word) {\n        /*\"\"\"remove connective ‘و’ if it precedes a word beginning with ‘و’ \"\"\"*/\n        if (word.length >= 4 && word.substr(0, 2) == '\\u0648\\u0648')\n            word = word.substr(1);\n        return word\n    }\n\n    pro_w4(word) {\n        /* \"\"\"process length four patterns and extract length three roots\"\"\" */\n        if (pr4[0].includes(word[0])) {          // مفعل\n            word = word.substr(1);\n        }\n        else if (pr4[1].includes(word[1])) {     // فاعل\n            word = word.substr(0, 1) + word.substr(2);\n        }\n        else if (pr4[2].includes(word[2])) {     // فعال - فعول - فعيل \n            word = word.substr(0, 2) + word[3];\n        }\n        else if (pr4[3].includes(word[3])) {     // فعلة\n            word = word.substr(0, word.length - 1);\n        }\n        else {\n            word = this.suf1(word);      // do - normalize short sufix\n            if (word.length == 4)\n                word = this.pre1(word);  // do - normalize short prefix\n        }\n        return word;\n    }\n\n    pro_w53(word) {\n        /* \"\"\"process length five patterns and extract length three roots\"\"\" */\n        if (pr53[0].includes(word[2]) && word[0] == '\\u0627')       // افتعل - افاعل\n            word = word[1] + word.substr(3);\n\n        else if (pr53[1].includes(word[3]) && word[0] == '\\u0645')  // مفعول - مفعال - مفعيل\n            word = word.substr(1, 2) + word[4];\n\n        else if (pr53[2].includes(word[0]) && word[4] == '\\u0629')  // مفعلة - تفعلة - افعلة\n            word = word.substr(1, 3);\n\n        else if (pr53[3].includes(word[0]) && word[2] == '\\u062a')  // مفتعل - يفتعل - تفتعل\n            word = word[1] + word.substr(3);\n\n        else if (pr53[4].includes(word[0]) && word[2] == '\\u0627')  // مفاعل - تفاعل\n            word = word[1] + word.substr(3);\n\n        else if (pr53[5].includes(word[2]) && word[4] == '\\u0629')  // فعولة - فعالة\n            word = word.substr(0, 2) + word[3];\n\n        else if (pr53[6].includes(word[0]) && word[1] == '\\u0646')  // انفعل - منفعل\n            word = word.substr(2);\n\n        else if (word[3] == '\\u0627' && word[0] == '\\u0627')      // افعال\n            word = word.substr(1, 2) + word[4];\n\n        else if (word[4] == '\\u0646' && word[3] == '\\u0627')      // فعلان\n            word = word.substr(0, 3);\n\n        else if (word[3] == '\\u064a' && word[0] == '\\u062a')      // تفعيل\n            word = word.substr(1, 2) + word[4];\n\n        else if (word[3] == '\\u0648' && word[1] == '\\u0627')      // فاعول\n            word = word[0] + word[2] + word[4]\n\n        else if (word[2] == '\\u0627' && word[1] == '\\u0648')      // فواعل\n            word = word[0] + word.substr(3);\n\n        else if (word[3] == '\\u0626' && word[2] == '\\u0627')      // فعائل\n            word = word.substr(0, 2) + word[4];\n\n        else if (word[4] == '\\u0629' && word[1] == '\\u0627')      // فاعلة\n            word = word[0] + word.substr(2, 2);\n\n        else if (word[4] == '\\u064a' && word[2] == '\\u0627')     // فعالي\n            word = word.substr(0, 2) + word[3];\n\n        else {\n            word = this.suf1(word)      // do - normalize short sufix\n            if (word.length == 5)\n                word = this.pre1(word);  // do - normalize short prefix\n        }\n\n        return word;\n    }\n\n    pro_w54(word) {\n        /* \"\"\"process length five patterns and extract length four roots\"\"\" */\n        if (pr53[2].includes(word[0]))  // تفعلل - افعلل - مفعلل\n            word = word.substr(1);\n\n        else if (word[4] == '\\u0629')        // فعللة\n            word = word.substr(0, 4);\n\n        else if (word[2] == '\\u0627')        // فعالل\n            word = word.substr(0, 2) + word.substr(3);\n\n        return word;\n    }\n\n    end_w5(word) {\n        /* \"\"\"ending step (word of length five)\"\"\" */\n        if (word.length == 4)\n            word = this.pro_w4(word);\n\n        else if (word.length == 5)\n            word = this.pro_w54(word);\n\n        return word;\n    }\n\n    pro_w6(word) {\n        /* \"\"\"process length six patterns and extract length three roots\"\"\" */\n        if (word.startsWith('\\u0627\\u0633\\u062a') || word.startsWith('\\u0645\\u0633\\u062a'))  // مستفعل - استفعل\n            word = word.substr(3);\n\n        else if (word[0] == '\\u0645' && word[3] == '\\u0627' && word[5] == '\\u0629')           // مفعالة\n            word = word.substr(1, 2) + word[4];\n\n        else if (word[0] == '\\u0627' && word[2] == '\\u062a' && word[4] == '\\u0627')           // افتعال\n            word = word[1] + word[3] + word[5];\n\n        else if (word[0] == '\\u0627' && word[3] == '\\u0648' && word[2] == word[4])            // افعوعل\n            word = word[1] + word.substr(4);\n\n        else if (word[0] == '\\u062a' && word[2] == '\\u0627' && word[4] == '\\u064a')           // تفاعيل   new pattern\n            word = word[1] + word[3] + word[5];\n\n        else {\n            word = this.suf1(word);      // do - normalize short sufix\n            if (word.length == 6)\n                word = this.pre1(word);  // do - normalize short prefix\n        }\n\n        return word\n    }\n\n    pro_w64(word) {\n        /* \"\"\"process length six patterns and extract length four roots\"\"\" */\n        if (word[0] == '\\u0627' && word[4] == '\\u0627') {   // افعلال\n            word = word.substr(1, 3) + word[5];\n        }\n\n        else if (word.startsWith('\\u0645\\u062a'))            // متفعلل\n            word = word.substr(2);\n\n        return word;\n    }\n\n    end_w6(word) {\n        /* \"\"\"ending step (word of length six)\"\"\" */\n        if (word.length == 5) {\n            word = this.pro_w53(word);\n            word = this.end_w5(word);\n        }\n\n        else if (word.length == 6)\n            word = this.pro_w64(word);\n\n        return word;\n    }\n\n    suf1(word) {\n        /* \"\"\"normalize short sufix\"\"\" */\n        for (let sf1 of s1) {\n            if (word.endsWith(sf1))\n                return word.substr(0, word.length - 1);\n        }\n\n        return word;\n    }\n\n    pre1(word) {\n        /* \"\"\"normalize short prefix\"\"\" */\n        for (let sp1 of p1) {\n            if (word.startsWith(sp1))\n                return word.substr(1);\n        }\n\n        return word;\n    }\n};"]}